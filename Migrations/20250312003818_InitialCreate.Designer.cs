// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EscuelaAppSimbana.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250312003818_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Clase", b =>
                {
                    b.Property<int>("clase_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("clase_id"));

                    b.Property<string>("nombre_clase")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("profesor_id")
                        .HasColumnType("int");

                    b.HasKey("clase_id");

                    b.HasIndex("profesor_id");

                    b.ToTable("clases");
                });

            modelBuilder.Entity("Estudiante", b =>
                {
                    b.Property<int>("estudiante_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("estudiante_id"));

                    b.Property<string>("apellido")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("fecha_nacimiento")
                        .HasColumnType("datetime2");

                    b.Property<string>("grado")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("estudiante_id");

                    b.ToTable("estudiantes");
                });

            modelBuilder.Entity("EstudianteClase", b =>
                {
                    b.Property<int>("estudiante_id")
                        .HasColumnType("int");

                    b.Property<int>("clase_id")
                        .HasColumnType("int");

                    b.HasKey("estudiante_id", "clase_id");

                    b.HasIndex("clase_id");

                    b.ToTable("estudiante_clases");
                });

            modelBuilder.Entity("Profesor", b =>
                {
                    b.Property<int>("profesor_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("profesor_id"));

                    b.Property<string>("apellido")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("especialidad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("profesor_id");

                    b.ToTable("profesores");
                });

            modelBuilder.Entity("Usuario", b =>
                {
                    b.Property<int>("user_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("user_id"));

                    b.Property<string>("password")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("usuario")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("user_id");

                    b.ToTable("usuarios");
                });

            modelBuilder.Entity("Clase", b =>
                {
                    b.HasOne("Profesor", "profesor")
                        .WithMany("clases")
                        .HasForeignKey("profesor_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("profesor");
                });

            modelBuilder.Entity("EstudianteClase", b =>
                {
                    b.HasOne("Clase", "clase")
                        .WithMany("estudiante_clases")
                        .HasForeignKey("clase_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Estudiante", "estudiante")
                        .WithMany("estudiante_clases")
                        .HasForeignKey("estudiante_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("clase");

                    b.Navigation("estudiante");
                });

            modelBuilder.Entity("Clase", b =>
                {
                    b.Navigation("estudiante_clases");
                });

            modelBuilder.Entity("Estudiante", b =>
                {
                    b.Navigation("estudiante_clases");
                });

            modelBuilder.Entity("Profesor", b =>
                {
                    b.Navigation("clases");
                });
#pragma warning restore 612, 618
        }
    }
}
